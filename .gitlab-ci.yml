default:
  image: node:20

stages:
  - test
  - build-push
  - pack
  - deploy
  
.ssh_defaults:
  image: kroniak/ssh-client
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -p $REMOTE_PORT $REMOTE_HOST >> ~/.ssh/known_hosts
    - chmod 664 ~/.ssh/known_hosts

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

lint-job:
  stage: test
  before_script:
    - npm ci
  script:
    - npm run lint

build-push:
  needs: [lint-job]
  rules:
    - if: '$CI_COMMIT_TAG != null'
      when: manual
  image: docker:20.10

  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ''

  services:
    - docker:20.10.16-dind
  stage: pack

  before_script:
    - export IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - time docker build -t $IMAGE -f docker/Dockerfile .
    - docker push $IMAGE

deploy:
    rules:
    - if: '$CI_COMMIT_TAG != null'
      when: manual
    extends:
      .ssh_defaults
    stage: deploy
    before_script:
    - export IMAGE=$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    script:
    - ssh $REMOTE_USER@$REMOTE_HOST -p $REMOTE_PORT docker login -u $LOGIN_GITLAB -p $PASSWORD_GITLAB $CI_REGISTRY
    - ssh $REMOTE_USER@$REMOTE_HOST -p $REMOTE_PORT rm -fr questionnaire-server
    - ssh $REMOTE_USER@$REMOTE_HOST -p $REMOTE_PORT mkdir -p questionnaire-server/docker
    - scp -P $REMOTE_PORT "docker/docker-compose.yml" $REMOTE_USER@$REMOTE_HOST:questionnaire-server/docker/docker-compose.yml
    - ssh $REMOTE_USER@$REMOTE_HOST -p $REMOTE_PORT docker-compose  -f questionnaire-server/docker/docker-compose.yml up -d